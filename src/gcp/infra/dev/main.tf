variable "GCP_PROJECT_ID" {
    type = string
    description = "the target project where to run TF"
}

terraform {
  required_providers {
    google = {
      source = "hashicorp/google"
    }
  }

  backend "gcs" {
    bucket  = "tf-state-temp-measure"
    prefix  = "terraform/state"
  }
}

provider "google" {
  version = "3.5.0"

  project = var.GCP_PROJECT_ID
  region  = "europe-west2"
  zone    = "europe-west2-c"
}

resource "google_project_service" "iot_api" {
  project = var.GCP_PROJECT_ID
  service = "cloudiot.googleapis.com"

  disable_dependent_services = true
}

resource "google_project_service" "bq_api" {
  project = var.GCP_PROJECT_ID
  service = "bigquery.googleapis.com"

  disable_dependent_services = true
}

resource "google_bigquery_dataset" "temp_measure" {
  dataset_id                  = "temp_measure"
  friendly_name               = "temp_measure"
  description                 = "This is the dataset to host the temperature measurements from the raspberry pi"
  location                    = "europe-west2"

  depends_on = [google_project_service.bq_api]
}

resource "google_bigquery_table" "temp_history_raw" {
  dataset_id = google_bigquery_dataset.temp_measure.dataset_id
  table_id = "temp_history_raw"

  time_partitioning {
    type = "DAY"
  }

  depends_on = [google_bigquery_dataset.temp_measure]
  
  schema = <<EOF
[
  {
    "name": "pubsub_message_id",
    "type": "STRING",
    "description": "the PubSub id of the message"
  },
  {
    "name": "device_message_id",
    "type": "STRING",
    "description": "the id of the message generated by the device"
  },
  {
    "name": "json_msg",
    "type": "STRING",
    "mode": "NULLABLE",
    "description": "The raw json message from the measurement device"
  },
  {
    "name": "processing_time",
    "type": "TIMESTAMP",
    "mode": "NULLABLE",
    "description": "The time the message was processed by the ingestion process"
  }
]
EOF
}

resource "google_bigquery_table" "temp_history_parsed" {
  dataset_id = google_bigquery_dataset.temp_measure.dataset_id
  table_id = "temp_history_parsed"

  time_partitioning {
    type = "DAY"
  }

  depends_on = [google_bigquery_dataset.temp_measure]
  
  schema = <<EOF
[
  {
    "name": "pubsub_message_id",
    "type": "STRING",
    "description": "the PubSub id of the message"
  },
  {
    "name": "device_message_id",
    "type": "STRING",
    "description": "the id of the message generated by the device"
  },
  {
    "name": "temperature",
    "type": "FLOAT",
    "mode": "NULLABLE",
    "description": "The temperature measurement"
  },
  {
    "name": "humidity",
    "type": "FLOAT",
    "mode": "NULLABLE",
    "description": "The humidity measurement"
  },
  {
    "name": "measuring_time",
    "type": "TIMESTAMP",
    "mode": "NULLABLE",
    "description": "The timestamp the measurement happened on the IOT device"
  },
  {
    "name": "processing_time",
    "type": "TIMESTAMP",
    "mode": "NULLABLE",
    "description": "The time the message was processed by the ingestion process"
  }
]
EOF
}